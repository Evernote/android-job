apply plugin: 'com.android.library'
apply plugin: 'com.github.ben-manes.versions'
apply from: '../build-config/gradle-quality.gradle'

dependencies {
    provided "com.google.android.gms:play-services-gcm:$playServicesVersion"
    //compile "com.google.android.gms:play-services-gcm:$rootProject.ext.playServicesVersion"

    //noinspection GradleDependency
    compile "com.android.support:support-annotations:$supportLibVersion"
    compile 'net.vrallev.android:cat:1.0.5'

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.squareup.assertj:assertj-android:1.1.1'

    androidTestCompile "com.facebook.stetho:stetho:$stethoVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.assertj:assertj-core:$assertjVersion"
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    resourcePrefix 'job_'

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)

        consumerProguardFiles 'proguard.txt'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError true
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

apply from: '../build-config/gradle-push.gradle'